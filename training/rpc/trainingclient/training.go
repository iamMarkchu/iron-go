// Code generated by goctl. DO NOT EDIT!
// Source: training.proto

//go:generate mockgen -destination ./training_mock.go -package trainingclient -source $GOFILE

package trainingclient

import (
	"context"

	"iron-go/training/rpc/training"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	AddResp         = training.AddResp
	GetReq          = training.GetReq
	GetResp         = training.GetResp
	TrainingLogItem = training.TrainingLogItem
	Request         = training.Request
	Response        = training.Response
	AddReq          = training.AddReq

	Training interface {
		Ping(ctx context.Context, in *Request) (*Response, error)
		Add(ctx context.Context, in *AddReq) (*AddResp, error)
		Get(ctx context.Context, in *GetReq) (*GetResp, error)
	}

	defaultTraining struct {
		cli zrpc.Client
	}
)

func NewTraining(cli zrpc.Client) Training {
	return &defaultTraining{
		cli: cli,
	}
}

func (m *defaultTraining) Ping(ctx context.Context, in *Request) (*Response, error) {
	client := training.NewTrainingClient(m.cli.Conn())
	return client.Ping(ctx, in)
}

func (m *defaultTraining) Add(ctx context.Context, in *AddReq) (*AddResp, error) {
	client := training.NewTrainingClient(m.cli.Conn())
	return client.Add(ctx, in)
}

func (m *defaultTraining) Get(ctx context.Context, in *GetReq) (*GetResp, error) {
	client := training.NewTrainingClient(m.cli.Conn())
	return client.Get(ctx, in)
}
